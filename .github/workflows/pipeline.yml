name: Build

on:
  push:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: pgvector/pgvector:pg15
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Install psql
        run: |
          sudo apt-get update
          sudo apt-get install --yes postgresql-client
      - name: Migrate test database
        env:
          DATABASE_URL: postgres://starter:starter@localhost:5432/starter_test?sslmode=disable
        run: |
          psql --host localhost --username postgres < databases/create_databases.sql
          go run ./cmd/migrate
      - name: Run tests
        run: go test ./...
  integration-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: pgvector/pgvector:pg15
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Install psql
        run: |
          sudo apt-get update
          sudo apt-get install --yes postgresql-client
      - name: Create database user
        run: |
          psql --host localhost --username postgres < databases/create_databases.sql
      - name: Run integration tests
        env:
          OPEN_AI_KEY: ${{ secrets.OPEN_AI_KEY }}
        run: |
          go test ./cmd/integrationtest -tags=integration
  evaluate:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: pgvector/pgvector:pg15
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Install psql
        run: |
          sudo apt-get update
          sudo apt-get install --yes postgresql-client
      - name: Create database user and run migrations
        env:
          DATABASE_URL: "postgres://starter:starter@localhost:5432/starter_development?sslmode=disable"
        run: |
          psql --host localhost --username postgres < databases/create_databases.sql
          go run ./cmd/migrate
      - name: Run evaluation
        env:
          OPEN_AI_KEY: ${{ secrets.OPEN_AI_KEY }}
          FEEDS: "https://feed.infoq.com/development/,https://blog.jetbrains.com/feed/,https://feed.infoq.com/Devops/,https://feed.infoq.com/architecture-design/"
          DATABASE_URL: "postgres://starter:starter@localhost:5432/starter_development?sslmode=disable"
        run: |
          go run ./cmd/collector
          go run ./cmd/analyzer
          go run ./cmd/evaluator
          cat scores.md > $GITHUB_STEP_SUMMARY
      - name: Save artifact
        uses: actions/upload-artifact@v4
        with:
          name: scores
          path: |
            scores.csv
            scores.md
  build-app:
    runs-on: ubuntu-latest
    needs: [ test, integration-test, evaluate ]
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ vars.GCP_WORKLOAD_IDENTITY_POOL_ID }}"
          service_account: "${{ vars.GCP_SERVICE_ACCOUNT }}"
      - uses: google-github-actions/setup-gcloud@v2
      - name: build
        run: |
          gcloud builds submit --tag gcr.io/${{ vars.GCP_PROJECT_ID }}/ai-starter/app:${{ github.sha }}
  migrate:
    runs-on: ubuntu-latest
    needs: [ build-app ]
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ vars.GCP_WORKLOAD_IDENTITY_POOL_ID }}"
          service_account: "${{ vars.GCP_SERVICE_ACCOUNT }}"
      - uses: google-github-actions/setup-gcloud@v2
      - name: Deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          job: ai-starter-migrate
          image: gcr.io/${{ vars.GCP_PROJECT_ID }}/ai-starter/app:${{ github.sha }}
          region: us-central1
          flags: --command=migrate --set-cloudsql-instances=ai-starter-db
      - name: Migrate
        run: |
          gcloud run jobs execute ai-starter-migrate
  deploy-app:
    runs-on: ubuntu-latest
    needs: [ migrate ]
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ vars.GCP_WORKLOAD_IDENTITY_POOL_ID }}"
          service_account: "${{ vars.GCP_SERVICE_ACCOUNT }}"
      - uses: google-github-actions/setup-gcloud@v2
      - name: Deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ai-starter-app
          image: gcr.io/${{ vars.GCP_PROJECT_ID }}/ai-starter/app:${{ github.sha }}
          region: us-central1
          flags: --allow-unauthenticated --platform managed --set-cloudsql-instances=ai-starter-db
  deploy-collector:
    runs-on: ubuntu-latest
    needs: [ migrate ]
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ vars.GCP_WORKLOAD_IDENTITY_POOL_ID }}"
          service_account: "${{ vars.GCP_SERVICE_ACCOUNT }}"
      - uses: google-github-actions/setup-gcloud@v2
      - name: Deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          job: ai-starter-collector
          image: gcr.io/${{ vars.GCP_PROJECT_ID }}/ai-starter/app:${{ github.sha }}
          region: us-central1
          flags: --command=collector --set-cloudsql-instances=ai-starter-db
  deploy-analyzer:
    runs-on: ubuntu-latest
    needs: [ migrate ]
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ vars.GCP_WORKLOAD_IDENTITY_POOL_ID }}"
          service_account: "${{ vars.GCP_SERVICE_ACCOUNT }}"
      - uses: google-github-actions/setup-gcloud@v2
      - name: Deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          job: ai-starter-analyzer
          image: gcr.io/${{ vars.GCP_PROJECT_ID }}/ai-starter/app:${{ github.sha }}
          region: us-central1
          flags: --command=analyzer --set-cloudsql-instances=ai-starter-db
