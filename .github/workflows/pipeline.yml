name: Build

on:
  push:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Run tests
        run: go test -race ./...
  build-app:
    runs-on: ubuntu-latest
    needs: [ test ]
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ vars.GCP_WORKLOAD_IDENTITY_POOL_ID }}"
          service_account: "${{ vars.GCP_SERVICE_ACCOUNT }}"
      - uses: google-github-actions/setup-gcloud@v2
      - name: build
        run: |
          gcloud builds submit --pack image=gcr.io/${{ vars.GCP_PROJECT_ID }}/ai-starter/app:${{ github.sha }},builder=gcr.io/buildpacks/builder:google-22,env=GOOGLE_BUILDABLE=cmd/app/main.go
  migrate:
    runs-on: ubuntu-latest
    needs: [ build-app ]
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ vars.GCP_WORKLOAD_IDENTITY_POOL_ID }}"
          service_account: "${{ vars.GCP_SERVICE_ACCOUNT }}"
      - uses: google-github-actions/setup-gcloud@v2
      - name: migrate Cloud SQL
        run: |
          curl https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.11.0/cloud-sql-proxy.linux.amd64 --output cloud-sql-proxy
          chmod +x cloud-sql-proxy
          sudo mv cloud-sql-proxy /usr/bin/cloud-sql-proxy
      - name: migrate
        env:
          DATABASE_URL: ${{ secrets.MIGRATION_DATABASE_URL }}
        run: |
          cloud-sql-proxy --port 6000 ${{ vars.GCP_PROJECT_ID }}:us-central1:ai-starter-db &
          sleep 6
          go run ./cmd/migrate
  deploy-app:
    runs-on: ubuntu-latest
    needs: [ migrate ]
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ vars.GCP_WORKLOAD_IDENTITY_POOL_ID }}"
          service_account: "${{ vars.GCP_SERVICE_ACCOUNT }}"
      - uses: google-github-actions/setup-gcloud@v2
      - name: deploy
        run: |-
          gcloud run deploy ai-starter-app \
            --image gcr.io/${{ vars.GCP_PROJECT_ID }}/ai-starter/app:${{ github.sha }} \
            --region us-central1 \
            --allow-unauthenticated \
            --platform managed
  deploy-collector:
    runs-on: ubuntu-latest
    needs: [ migrate ]
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ vars.GCP_WORKLOAD_IDENTITY_POOL_ID }}"
          service_account: "${{ vars.GCP_SERVICE_ACCOUNT }}"
      - uses: google-github-actions/setup-gcloud@v2
      - name: deploy
        run: |-
          gcloud functions deploy collector \
            --gen2 \
            --region=us-central1 \
            --runtime=go122 \
            --entry-point=collector \
            --trigger-topic=collector
  deploy-analyzer:
    runs-on: ubuntu-latest
    needs: [ migrate ]
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ vars.GCP_WORKLOAD_IDENTITY_POOL_ID }}"
          service_account: "${{ vars.GCP_SERVICE_ACCOUNT }}"
      - uses: google-github-actions/setup-gcloud@v2
      - name: deploy
        run: |-
          gcloud functions deploy analyzer \
            --gen2 \
            --region=us-central1 \
            --runtime=go122 \
            --entry-point=analyzer \
            --trigger-topic=analyzer

